{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/People/People.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","People","pathname","useLocation","useState","people","setPeople","errorMessage","setErrorMessage","slice","slugUser","setSlugUser","isLoading","setIsLoading","useEffect","fetchPeople","data","history","useHistory","push","findParent","person","parent","find","one","name","motherName","fatherName","map","onePeople","slug","sex","href","onClick","born","died","some","App","role","exact","to","activeClassName","path","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5cdb3867.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable no-nested-ternary */\nimport { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\n\nexport const People = () => {\n  const { pathname } = useLocation<{ pathname: string }>();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [slugUser, setSlugUser] = useState(pathname.slice(8));\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n      } catch (error) {\n        setErrorMessage('Unable to load people');\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchPeople();\n  }, []);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!slugUser) {\n      history.push('/people');\n    }\n\n    history.push(`/people/${slugUser}`);\n  }, [slugUser]);\n\n  const findParent = (person: Person) => {\n    let parent = people.find(one => one.name === person.motherName);\n\n    if (!parent) {\n      parent = people.find(one => one.name === person.fatherName);\n    }\n\n    if (!parent) {\n      return person;\n    }\n\n    return parent;\n  };\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && (<Loader />)}\n\n        {errorMessage && (\n          <>\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          </>\n        )}\n\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(onePeople => (\n              <tr\n                data-cy=\"person\"\n                key={onePeople.slug}\n                className={onePeople.slug === slugUser\n                  ? 'has-background-warning'\n                  : ''}\n              >\n                <td>\n                  <a\n                    className={onePeople.sex === 'f'\n                      ? 'has-text-danger'\n                      : ''}\n                    href={`#/people/${onePeople.slug}`}\n                    onClick={() => {\n                      return setSlugUser(onePeople.slug);\n                    }}\n                  >\n                    {onePeople.name}\n                  </a>\n                </td>\n\n                <td>{onePeople.sex}</td>\n                <td>{onePeople.born}</td>\n                <td>{onePeople.died}</td>\n                {onePeople.motherName !== null ? (\n                  people.some(one => one.name === onePeople.motherName) ? (\n                    <td>\n                      <a\n                        className=\"has-text-danger\"\n                        href={`#/people/${findParent(onePeople).slug}`}\n                        onClick={() => {\n                          return setSlugUser(\n                            findParent(onePeople).slug,\n                          );\n                        }}\n                      >\n                        {onePeople.motherName}\n                      </a>\n                    </td>\n                  ) : (\n                    <td>{onePeople.motherName}</td>\n                  )\n                ) : (\n                  <td>-</td>\n                )}\n                {onePeople.fatherName !== null ? (\n                  people.some(one => one.name === onePeople.fatherName) ? (\n                    <td>\n                      <a\n                        href={`#/people/${findParent(onePeople).slug}`}\n                        onClick={() => {\n                          return setSlugUser(\n                            findParent(onePeople).slug,\n                          );\n                        }}\n                      >\n                        {onePeople.fatherName}\n                      </a>\n                    </td>\n                  ) : (\n                    <td>{onePeople.fatherName}</td>\n                  )\n                ) : (\n                  <td>-</td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport {\n  HashRouter, Route, NavLink, Switch, Redirect,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { People } from './components/People';\n\nexport const App = () => {\n  return (\n    <HashRouter>\n      <div data-cy=\"app\">\n        <nav\n          data-cy=\"nav\"\n          className=\"navbar is-fixed-top has-shadow\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"container\">\n            <div className=\"navbar-brand\">\n\n              <NavLink\n                exact\n                to=\"/\"\n                className=\"navbar-item\"\n                activeClassName=\"navbar-item has-background-grey-lighter\"\n              >\n                Home\n              </NavLink>\n\n              <NavLink\n                to=\"/people\"\n                className=\"navbar-item\"\n                activeClassName=\"navbar-item has-background-grey-lighter\"\n              >\n                People\n              </NavLink>\n\n            </div>\n          </div>\n        </nav>\n\n        <main className=\"section\">\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\">\n                <h1 className=\"title\">Home Page</h1>\n              </Route>\n              <Route exact path=\"/home\">\n                <Redirect to=\"/\" />\n              </Route>\n              <Route exact path=\"/people\">\n                <h1 className=\"title\">People Page</h1>\n                <People />\n              </Route>\n              <Route exact path=\"/people/:slug\">\n                <h1 className=\"title\">People Page</h1>\n                <People />\n              </Route>\n              <Route>\n                <h1 className=\"title\">Page not found</h1>\n              </Route>\n            </Switch>\n          </div>\n        </main>\n      </div>\n    </HashRouter>\n\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}